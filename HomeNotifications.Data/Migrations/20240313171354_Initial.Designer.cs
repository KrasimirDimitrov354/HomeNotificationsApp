// <auto-generated />
using System;
using HomeNotifications.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeNotifications.Data.Migrations
{
    [DbContext(typeof(HomeNotificationsDbContext))]
    [Migration("20240313171354_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeNotifications.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Created_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modified_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HomeNotifications.Data.Models.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("char(7)");

                    b.Property<Guid>("Created_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modified_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#FF0000",
                            Created_By_Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            Created_Date = new DateTime(2024, 3, 13, 19, 13, 54, 111, DateTimeKind.Local).AddTicks(1132),
                            Name = "High Priority"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#FFFF00",
                            Created_By_Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            Created_Date = new DateTime(2024, 3, 13, 19, 13, 54, 111, DateTimeKind.Local).AddTicks(1188),
                            Name = "Medium Priority"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#0080FF",
                            Created_By_Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            Created_Date = new DateTime(2024, 3, 13, 19, 13, 54, 111, DateTimeKind.Local).AddTicks(1192),
                            Name = "Low Priority"
                        });
                });

            modelBuilder.Entity("HomeNotifications.Data.Models.NotificationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ChangePassword")
                        .HasColumnType("bit");

                    b.Property<Guid>("Created_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modified_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("char(110)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            ChangePassword = false,
                            Created_By_Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            Created_Date = new DateTime(2024, 3, 13, 19, 13, 54, 115, DateTimeKind.Local).AddTicks(9906),
                            PasswordHash = "392AF712F5350B0C9B9E5D4F2886A908375E2E2B55D8847A45F321ED935AF64F:B9AC4CC6C054102D5C2342BE211EF015:50000:SHA256",
                            RoleId = 1,
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("HomeNotifications.Data.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Created_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modified_By_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_By_Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            Created_Date = new DateTime(2024, 3, 13, 19, 13, 54, 116, DateTimeKind.Local).AddTicks(803),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Created_By_Id = new Guid("c85a27d4-d7c9-4293-9f18-93c836896b50"),
                            Created_Date = new DateTime(2024, 3, 13, 19, 13, 54, 116, DateTimeKind.Local).AddTicks(820),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("HomeNotifications.Data.Models.Notification", b =>
                {
                    b.HasOne("HomeNotifications.Data.Models.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeNotifications.Data.Models.NotificationUser", "Owner")
                        .WithMany("Notifications")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HomeNotifications.Data.Models.NotificationUser", b =>
                {
                    b.HasOne("HomeNotifications.Data.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HomeNotifications.Data.Models.NotificationUser", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
